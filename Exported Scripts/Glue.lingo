global gLevelRunningglobal gSndChanGlue -- our sound channel allocation (constant)-- Parametersproperty pPartnerOffset -- offset of my partner's sprite number from meproperty pNotifyOffset -- offset of sprite to notify that I am dead (0 means do not notify)property pDistance -- distance between me and my partner to maintain-- Cachingproperty pSpriteproperty pPartnerproperty pNotify-- Stateproperty pBroken -- true if the link is brokenon getPropertyDescriptionList me  return [#pPartnerOffset: [#comment: "Partner's offset in score:", #format: #integer, #default: 1], \          #pNotifyOffset: [#comment: "Notify of breakage offset (0=disabled):", #format: #integer, #default: 0], \          #pDistance: [#comment: "Distance to maintain:", #format: #float, #default: 20.0]]endon beginSprite me  pSprite = sprite(me.spriteNum)  pPartner = sprite(me.spriteNum + pPartnerOffset)  pNotify = sprite(me.spriteNum + pNotifyOffset)  pBroken = falseend  on enterFrame me    if pBroken or not gLevelRunning then    return  end if    pPhysics = pSprite.scriptInstanceList[1]  pPartnerPhysics = pPartner.scriptInstanceList[1]    deltaPos_V = pPhysics.pPos - pPartnerPhysics.pPos  deltaVel_V = pPhysics.pVel - pPartnerPhysics.pVel    direction = deltaPos_V.getNormalized()    springDamping = 0.5  inoutVel = deltaVel_V * direction -- dot product  dampingVelMag = inoutVel * springDamping  dampingVel = direction * dampingVelMag    distance = deltaPos_V.magnitude  if distance = 0 then    distance = 1  end if  displacement = (pDistance - distance)  -- displacement is the difference of the current position from our desired distance    -- smashed up?  if abs(distance - pDistance) > 50 then    -- stop future processing    pBroken = true    -- notify of breakage    if (pNotify <> pSprite) then      notifyLists = [pNotify.scriptInstanceList, pSprite.scriptInstanceList]      repeat with j = 1 to notifyLists.count        notifyInsts = notifyLists[j]        repeat with i = 1 to notifyInsts.count          inst = notifyInsts[i]          if inst.handler(#notifyGlueBroken) then            call(#notifyGlueBroken, inst, me)          end if        end repeat      end repeat    end if        -- play sound    sound(gSndChanGlue).volume = 200    puppetSound gSndChanGlue, "Poik"            return -- stop doing this frame's glue processing  end if      factor = (1.0/distance) * displacement / 5.0    call(#accelerate, pPhysics, deltaPos_V * factor + -dampingVel)  call(#accelerate, pPartnerPhysics, deltaPos_V * -factor + dampingVel)  --call(#damp, pPhysics, 0.8)  --put delta  --call(#damp, pPartnerPhysics, 0.8)end